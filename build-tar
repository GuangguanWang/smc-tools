#!/bin/bash

VERSION=`grep -w SMC_TOOLS_RELEASE Makefile | head -1 | awk '{print($3)}'`;
LEVEL=`git log --pretty=format:'%h' -n 1`;

# Build to make sure the final files are up to date
make
if [ $? -ne 0 ]; then
        echo "Error: Build failed";
        exit 7;
fi

# Consistency check: Do we have an entry in the README's "History" section...?
if [ ! -e README.smctools ]; then
	make;
fi
if [ `grep -A 20 "Release History:" README.smctools | grep "$VERSION" | wc -l` -le 1 ]; then
	echo "Error: 'README.smctools' is missing two entries for version '$VERSION' (at the top and in 'Release History')";
	exit 4;
fi

# Check .spec file
vspec="`grep -e "^Version: " smc-tools.spec.in | awk '{print($2)}'`";
if [ "$vspec" != "$VERSION" ]; then
	echo "Error: .spec file has version $vspec instead of $VERSION";
	exit 6;
fi

# Consistency check: git branch
sref=`git symbolic-ref HEAD 2>/dev/null`;
if [ "${sref}" != "refs/heads/master" ]; then
	echo;
	echo "WARNING: Building package on non-master branch.";
	echo "         Packages for publication MUST be built on the master branch!";
	echo;
fi

if [ -e smc-tools.$VERSION.tar.gz ]; then
	echo "Removing old package...";
	rm smc-tools.$VERSION.tar.gz;
fi
echo "Building smc-tools $VERSION";
build_dir=smc-tools-$VERSION;
if [ -e $build_dir ]; then
	rm -rf $build_dir;
fi
mkdir $build_dir;
sed -e "s/=SMC LEVEL=/$LEVEL/" smctools_common.h > $build_dir/smctools_common.h
sed -e "s/=SMC LEVEL=/$LEVEL/" smc_rnics > $build_dir/smc_rnics
sed -e "s/=SMC LEVEL=/$LEVEL/" smc_dbg > $build_dir/smc_dbg
chmod a+x $build_dir/smc_rnics
chmod a+x $build_dir/smc_dbg
cp smc_pnet.c $build_dir;
cp smcss.c $build_dir;
cp smc-preload.c $build_dir;
cp Makefile $build_dir;
sed -e '/^smc-tools.spec:/,+2d' Makefile | sed -e '/^smc_rnics:/,+7d' \
| sed -e 's/ smc-tools.spec smc_dbg smc_rnics//' \
| sed -e 's/README.smctools af_smc.7/README.smctools/' \
| sed -e 's/ README.smctools//' \
> $build_dir/Makefile;
cp LICENSE $build_dir;
cp README.smctools $build_dir;
cp af_smc.7 $build_dir;
cp smcss.8 $build_dir;
cp smc_pnet.8 $build_dir;
cp smc_rnics.8 $build_dir;
cp smc_run $build_dir;
cp smc_run.8 $build_dir;
cp smc-tools.autocomplete $build_dir;

cd $build_dir;
num=`ls -1 | wc -l`;
make >/dev/null 2>&1
make clean >/dev/null
if [ `ls -1 | wc -l` -ne $num ]; then
	echo "Error: Number of files variies after a 'make'-'make clean' cycle."
	echo "Content of directory $build_dir:";
	ls -1 | sed 's/^/  /';
	echo "Expected $num, got `ls -1 | wc -l`";
	exit 1;
fi

cd -;
target=smc-tools-$VERSION.tar.gz
tar -zcvf $target smc-tools-$VERSION | sed 's/^/   /';
if [ $? -eq 0 ]; then
	echo "Package $target build successful";
else
	echo "Package $target build failed";
fi
cd ..;
rm -rf tmp;

exit 0;
